#!/bin/bash
#
# tate
#
# Written by Koo.Tabei 20100627

#_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
# 初期設定
#_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/

# 変数の定義
tmp=/tmp/$$   # 一時データのヘッダー

function USAGE {
  echo "Usage   : tate [-h] [-n keynumber] [file]" 1>&2
  echo "Version : Sun Jun 27 14:10:29 JST 2010" 1>&2
  echo "Written by Koo.Tabei" 1>&2
}


#_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
# オプション判定
#_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
while getopts "hn:" OPT; do
case "$OPT" in
  h)
	# ヘルプ表示
	USAGE
	cat <<- FIN | more 1>&2
	
	
	<機能>
	  全レコードの全フィールドを、縦一列に並べる
	
	  ※フィールド(単語)の区切りはタブまたはブランク
	
	<オプション>
	  h) ヘルプを表示する
	
	  n)
	     縦一列にならべるときのキーの数を指定する
	
	<戻り値>
	  0:正常終了
	  2:引数エラー
	  3:処理エラー
	
	FIN
	exit 0
	;;
  n)
	# 折り返しキー指定
	[ -n "$(awk 'BEGIN{if("'"${OPTARG}"'"!~/^[1-9[0-9]*$/){print "true"}}')" ] && exit 2
	key="${OPTARG}"
	;;
  \?)
	# 引数エラー
	exit 2
	;;
esac
done

shift $((OPTIND-1))


#_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
# 処理
#_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/

if [ -n "$1" ]; then
  cat "${1}"
else
  cat
fi |\
if [ -z "$key" ]; then
  awk '{ for(i=1;i<=NF;i++){print $i}; }'
else
  com="$(seq 1 "$key" | awk '{printf(",$%d",$1)}')"
  awk -v key="" '{
      for(i='"$((key+1))"';i<=NF;i++){print '"${com/,/}"',$i};
  }'
fi
[ $(echo ${PIPESTATUS[@]} | tr " " "+" | bc) -eq 0 ] || { echo "tate : 処理エラー" 1>&2 ; exit 3 ; }


#_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
# 終了
#_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
rm -rf $tmp-*
exit 0

